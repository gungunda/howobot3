// js/ui/view-week.js
// –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ + –∏–Ω–ª–∞–π–Ω-—Ä–µ–¥–∞–∫—Ç–æ—Ä –∑–∞–¥–∞—á–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å –¥–Ω—è–º–∏ —Ä–∞–∑–≥—Ä—É–∑–∫–∏.
//
// –ù–æ–≤–æ–µ –≤ —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏:
//  - —É –∑–∞–¥–∞—á–∏ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –µ—Å—Ç—å –ø–æ–ª–µ offloadDays: –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
//    (–Ω–∞–ø—Ä–∏–º–µ—Ä ["tuesday","thursday"])
//  - —É –∑–∞–¥–∞—á–∏ –≤ override —ç—Ç–æ –ø–æ–ª–µ –≤—Å–µ–≥–¥–∞ null, –Ω–æ override —Ç—É—Ç –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç—Å—è
//  - –≤ –∏–Ω–ª–∞–π–Ω-—Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ–∫–±–æ–∫—Å—ã –¥–ª—è –≤—Å–µ—Ö –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏,
//    –ù–û –∑–∞–ø—Ä–µ—â–∞–µ–º –≤—ã–±–∏—Ä–∞—Ç—å "–ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å" –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–Ω—è.
//    –ü—Ä–∏–º–µ—Ä: —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—Ä–µ–¥—É -> –≤—Ç–æ—Ä–Ω–∏–∫ –æ—Ç–∫–ª—é—á—ë–Ω.
//    –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –∏–∑ –¥–æ–º–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏: –∑–∞ –¥–µ–Ω—å –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–Ω—è
//    –ø—Ä–µ–¥–º–µ—Ç –∏ —Ç–∞–∫ –ø–æ–ø–∞–¥–∞–µ—Ç –∫–∞–∫ –æ–±—ã—á–Ω–∞—è D+1 –∑–∞–¥–∞—á–∞, —ç—Ç–æ –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Ä–∞–∑–≥—Ä—É–∑–∫–æ–π.

import { minutesToStr } from "../utils/format-utils.js";

const WEEK_ORDER = [
  ["monday","–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"],
  ["tuesday","–í—Ç–æ—Ä–Ω–∏–∫"],
  ["wednesday","–°—Ä–µ–¥–∞"],
  ["thursday","–ß–µ—Ç–≤–µ—Ä–≥"],
  ["friday","–ü—è—Ç–Ω–∏—Ü–∞"],
  ["saturday","–°—É–±–±–æ—Ç–∞"],
  ["sunday","–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"],
];

const WEEK_SHORT = [
  ["monday","–ü–Ω"],
  ["tuesday","–í—Ç"],
  ["wednesday","–°—Ä"],
  ["thursday","–ß—Ç"],
  ["friday","–ü—Ç"],
  ["saturday","–°–±"],
  ["sunday","–í—Å"],
];

function prevWeekday(dayKey){
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–π –∏–¥—ë—Ç "–Ω–∞–∫–∞–Ω—É–Ω–µ" –¥–∞–Ω–Ω–æ–≥–æ dayKey.
  // monday -> sunday
  // tuesday -> monday
  // ...
  const order = ["monday","tuesday","wednesday","thursday","friday","saturday","sunday"];
  const idx = order.indexOf(dayKey);
  if(idx === -1) return null;
  const prevIdx = (idx + 6) % 7;
  return order[prevIdx];
}

function renderReadonlyRow(t){
  const row = document.createElement("div");
  row.className = "task-item";
  row.dataset.taskId = t.id ?? "";

  const rowWrap = document.createElement("div");
  rowWrap.className = "week-row";

  const tt = document.createElement("span");
  tt.className = "task-title";
  tt.textContent = t.title || "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è";

  const badge = document.createElement("span");
  badge.className = "badge";
  badge.textContent = minutesToStr(t.minutes || 0);

  const editBtn = document.createElement("button");
  editBtn.className = "week-edit";
  editBtn.textContent = "‚úé";

  const delBtn = document.createElement("button");
  delBtn.className = "week-del";
  delBtn.textContent = "üóë";

  const right = document.createElement("span");
  right.className = "week-row-right";
  right.append(badge, editBtn, delBtn);

  rowWrap.append(tt, right);
  row.appendChild(rowWrap);
  return row;
}

// weekdayKey ‚Äî —ç—Ç–æ –¥–µ–Ω—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –º—ã —Å–µ–π—á–∞—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä "wednesday").
// –ú—ã –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º, —á—Ç–æ–±—ã –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –æ—Ç–º–µ—á–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å –∫–∞–∫ —Ä–∞–∑–≥—Ä—É–∑–æ—á–Ω—ã–π.
function renderEditRow(t, weekdayKey){
  const row = document.createElement("div");
  row.className = "task-item editing";
  row.dataset.taskId = t.id ?? "";

  const formWrap = document.createElement("div");
  formWrap.className = "week-edit-form";

  const titleLabel = document.createElement("div");
  titleLabel.className = "small muted";
  titleLabel.textContent = "–ù–∞–∑–≤–∞–Ω–∏–µ";

  const titleInput = document.createElement("input");
  titleInput.type = "text";
  titleInput.className = "week-edit-title";
  titleInput.value = t.title || "";

  const minLabel = document.createElement("div");
  minLabel.className = "small muted";
  minLabel.textContent = "–ú–∏–Ω—É—Ç—ã";

  const minInput = document.createElement("input");
  minInput.type = "number";
  minInput.className = "week-edit-minutes";
  minInput.value = String(t.minutes || 0);

  const offLabel = document.createElement("div");
  offLabel.className = "small muted";
  offLabel.textContent = "–†–∞–∑–≥—Ä—É–∑–∫–∞ –ø–æ –¥–Ω—è–º";

  const offWrap = document.createElement("div");
  offWrap.className = "week-offload-grid";

  const offSet = Array.isArray(t.offloadDays) ? t.offloadDays : [];
  const blockedDay = prevWeekday(weekdayKey); // —ç—Ç–æ—Ç –¥–µ–Ω—å –Ω–µ–ª—å–∑—è –≤—ã–±–∏—Ä–∞—Ç—å

  for(const [wdKey, wdShort] of WEEK_SHORT){
    const lbl = document.createElement("label");
    lbl.className = "offload-choice";

    const cb = document.createElement("input");
    cb.type = "checkbox";
    cb.className = "week-offload-chk";
    cb.value = wdKey;

    // —á–µ–∫–Ω—É—Ç, –µ—Å–ª–∏ –±—ã–ª –≤ offSet
    cb.checked = offSet.includes(wdKey);

    // –µ—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–π "–ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å", —Ç–æ –¥–µ–ª–∞–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º –∏ —Å–Ω–∏–º–∞–µ–º –≥–∞–ª–æ—á–∫—É
    if (wdKey === blockedDay) {
      cb.checked = false;
      cb.disabled = true;
    }

    const span = document.createElement("span");
    span.textContent = wdShort;

    lbl.append(cb, span);
    offWrap.appendChild(lbl);
  }

  const btnRow = document.createElement("div");
  btnRow.className = "week-edit-buttons";

  const saveBtn = document.createElement("button");
  saveBtn.className = "week-save";
  saveBtn.textContent = "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å";

  const cancelBtn = document.createElement("button");
  cancelBtn.className = "week-cancel";
  cancelBtn.textContent = "–û—Ç–º–µ–Ω–∞";

  btnRow.append(saveBtn, cancelBtn);

  formWrap.append(
    titleLabel,
    titleInput,
    minLabel,
    minInput,
    offLabel,
    offWrap,
    btnRow
  );

  row.appendChild(formWrap);
  return row;
}

function renderDayCard(weekdayKey, weekdayTitle, tasksForDay, uiState){
  const card = document.createElement("div");
  card.className = "week-day card";
  card.dataset.weekday = weekdayKey;

  const head = document.createElement("div");
  head.className = "week-day-header";

  const titleEl = document.createElement("div");
  titleEl.className = "week-day-title";
  titleEl.textContent = weekdayTitle;

  const addBtn = document.createElement("button");
  addBtn.className = "week-add";
  addBtn.textContent = "+";

  head.append(titleEl, addBtn);
  card.appendChild(head);

  const list = document.createElement("div");
  list.className = "week-day-list";

  if(Array.isArray(tasksForDay) && tasksForDay.length){
    for(const t of tasksForDay){
      const isEditing =
        uiState.scheduleEdit &&
        uiState.scheduleEdit.weekday === weekdayKey &&
        uiState.scheduleEdit.taskId === t.id;

      const row = isEditing
        ? renderEditRow(t, weekdayKey) // <--- –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º weekdayKey
        : renderReadonlyRow(t);

      list.appendChild(row);
    }
  } else {
    const empty = document.createElement("div");
    empty.className = "muted small";
    empty.textContent = "–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤";
    list.appendChild(empty);
  }

  card.appendChild(list);
  return card;
}

export function updateWeekView(schedule, uiState){
  const view = document.querySelector('[data-view="schedule"]');
  if(!view) return;
  const container = view.querySelector("[data-week]");
  if(!container) return;

  container.innerHTML = "";

  for(const [weekdayKey, weekdayTitle] of WEEK_ORDER){
    const dayTasks = Array.isArray(schedule?.[weekdayKey]) ? schedule[weekdayKey] : [];
    const card     = renderDayCard(weekdayKey, weekdayTitle, dayTasks, uiState);
    container.appendChild(card);
  }
}
